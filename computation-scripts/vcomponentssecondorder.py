# !! THIS FILE IS AUTOMATICALLY GENERATED.
# DO NOT EDIT. 
# SEE calculation-helpers/code-generation/generate*.py

from typing import List, Tuple
import numpy as np

def v_second(U: float, E: float, t: float, knows_l_array: List[Tuple[int, float, int, float, int, float, int, float]], system_state) -> np.complex128:
    res: np.complex128 = np.complex128(0)
    for (l, epsl, m, epsm, a, epsa, b, epsb) in knows_l_array:
        eps_one_A = E*(epsl-epsm)
        eps_one_B = eps_one_A + U
        eps_one_C = eps_one_A - U
        eps_two_A = E*(epsa-epsb)
        eps_two_B = eps_two_A + U
        eps_two_C = eps_two_A - U

        occ_l = system_state.get_state_array()[l]
        occ_l_os = system_state.get_state_array()[system_state.get_opposite_spin_index(l)]
        occ_m = system_state.get_state_array()[m]
        occ_m_os = system_state.get_state_array()[system_state.get_opposite_spin_index(m)]
        occ_a = system_state.get_state_array()[a]
        occ_a_os = system_state.get_state_array()[system_state.get_opposite_spin_index(a)]
        occ_b = system_state.get_state_array()[b]
        occ_b_os = system_state.get_state_array()[system_state.get_opposite_spin_index(b)]

        if l == a:
            if l == b:
                if m == a:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 4 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+ 4 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                else:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
            else:
                if m == a:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 4 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+ 4 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                else:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: True l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
        else:
            if l == b:
                if m == a:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 4 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+ 4 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                else:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 4 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+ 4 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: True m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
            else:
                if m == a:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 4 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+ 4 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+ 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+ 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: True m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                else:
                    if m == b:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))+((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))+((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))+((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 -(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: True Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                    else:
                        if occ_l:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 4 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      )+ 4 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      )+ -4 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_B))   if ((eps_one_B + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_B) * t) / (eps_two_B * (eps_one_B + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_B))   if ((eps_two_B + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_B) * t) / (eps_one_B * (eps_two_B + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      )+ 2 * ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_C))   if ((eps_one_B + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_C) * t) / (eps_two_C * (eps_one_B + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_B))   if ((eps_two_C + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_B) * t) / (eps_one_B * (eps_two_C + eps_one_B)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      )+ 2 * ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      )+ -2 * (((np.expm1(1j * eps_one_B * t) / eps_one_B) - ( ((1j * t)/(eps_two_A))   if ((eps_one_B + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_B + eps_two_A) * t) / (eps_two_A * (eps_one_B + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_B))   if ((eps_two_A + eps_one_B)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_B) * t) / (eps_one_B * (eps_two_A + eps_one_B)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: True Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                        else:
                            if occ_l_os:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      )+ -2 * (((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_B))   if ((eps_one_C + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_B) * t) / (eps_two_B * (eps_one_C + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_C))   if ((eps_two_B + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_C) * t) / (eps_one_C * (eps_two_B + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_C))   if ((eps_one_C + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_C) * t) / (eps_two_C * (eps_one_C + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_C))   if ((eps_two_C + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_C) * t) / (eps_one_C * (eps_two_C + eps_one_C)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      )-(((np.expm1(1j * eps_one_C * t) / eps_one_C) - ( ((1j * t)/(eps_two_A))   if ((eps_one_C + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_C + eps_two_A) * t) / (eps_two_A * (eps_one_C + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_C))   if ((eps_two_A + eps_one_C)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_C) * t) / (eps_one_C * (eps_two_A + eps_one_C)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 + 2 * ((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      )+ 2 * ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      )+ -2 * (((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_B))   if ((eps_one_A + eps_two_B)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_B) * t) / (eps_two_B * (eps_one_A + eps_two_B)))    )      ) + ((np.expm1(1j * eps_two_B * t) / eps_two_B) - ( ((1j * t)/(eps_one_A))   if ((eps_two_B + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_B + eps_one_A) * t) / (eps_one_A * (eps_two_B + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      )+((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_C))   if ((eps_one_A + eps_two_C)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_C) * t) / (eps_two_C * (eps_one_A + eps_two_C)))    )      ) + ((np.expm1(1j * eps_two_C * t) / eps_two_C) - ( ((1j * t)/(eps_one_A))   if ((eps_two_C + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_C + eps_one_A) * t) / (eps_one_A * (eps_two_C + eps_one_A)))    )      ))
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 +((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      )+((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      )-(((np.expm1(1j * eps_one_A * t) / eps_one_A) - ( ((1j * t)/(eps_two_A))   if ((eps_one_A + eps_two_A)< 1e-8) else    (np.expm1(1j * (eps_one_A + eps_two_A) * t) / (eps_two_A * (eps_one_A + eps_two_A)))    )      ) + ((np.expm1(1j * eps_two_A * t) / eps_two_A) - ( ((1j * t)/(eps_one_A))   if ((eps_two_A + eps_one_A)< 1e-8) else    (np.expm1(1j * (eps_two_A + eps_one_A) * t) / (eps_one_A * (eps_two_A + eps_one_A)))    )      ))
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: True Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                            else:
                                if occ_m:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: True Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                else:
                                    if occ_m_os:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: True Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
                                    else:
                                        if occ_a:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: True Ad: False Bc: False Bd: False 
                                                        res += 0 
                                        else:
                                            if occ_a_os:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: True Bc: False Bd: False 
                                                        res += 0 
                                            else:
                                                if occ_b:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: True Bd: False 
                                                        res += 0 
                                                else:
                                                    if occ_b_os:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: True 
                                                        res += 0 
                                                    else:
                                                        # l_is_a: False l_is_b: False m_is_a: False m_is_b: False Lc: False Ld: False Mc: False Md: False Ac: False Ad: False Bc: False Bd: False 
                                                        res += 0 
    return res


