from typing import List

FILENAME = "./../logicalcalcfunctions.py"


# This function marks the GENERATED FILE as not to be edited manually
def init_file():
    text = """# !! THIS FILE IS AUTOMATICALLY GENERATED.
# DO NOT EDIT. 
# SEE generateUsableFile.py

"""
    with open(FILENAME, "w") as file:
        file.write(text)


def write_file(input: str):
    with open(FILENAME, "a") as file:
        file.write(input)


def read_file(file_path: str):
    out_lines: List[str] = []

    with open(file_path, "r") as file:
        lines = file.readlines()

        for line in lines:
            line = line.strip()
            # Check if the line starts with 0, 1, or -
            if line and line[0] in {"0", "1", "-"}:
                # Remove spaces and ensure there are 8 characters
                line = line.replace(" ", "")
                if len(line) >= 8:
                    out_lines.append(line[:8])

    return out_lines


def generate_flipping_function(name: str, in_file_path: str, times_two_edgecase: bool):
    data_lines = read_file(in_file_path)

    write_file(
        f"""def {name}(Lu: int, Ld: int, Mu: int, Md: int, flip_up: bool, flip_l: bool) -> int:
    res = 0
"""
    )

    write_file("    res += ")
    buffer = ""
    var_names = ["Lu", "Ld", "Mu", "Md", "flip_up", "flip_l"]
    for line in data_lines:
        if line.endswith("10"):
            inner_buffer = "("
            for index, var_name in enumerate(var_names):
                if line[index] == "0":
                    inner_buffer += "not "
                if line[index] == "0" or line[index] == "1":
                    inner_buffer += var_name
                    inner_buffer += " and "
            inner_buffer = inner_buffer.removesuffix(" and ")
            inner_buffer += ") or "

            buffer += inner_buffer
    buffer = buffer.removesuffix(" or ")
    write_file(f"{buffer}\n")

    write_file("    res -= ")
    buffer = ""
    for line in data_lines:  #
        if line.endswith("01"):
            inner_buffer = "("
            for index, var_name in enumerate(var_names):
                if line[index] == "0":
                    inner_buffer += "not "
                if line[index] == "0" or line[index] == "1":
                    inner_buffer += var_name
                    inner_buffer += " and "
            inner_buffer = inner_buffer.removesuffix(" and ")
            inner_buffer += ") or "

            buffer += inner_buffer
    buffer = buffer.removesuffix(" or ")
    write_file(f"{buffer}\n")

    if times_two_edgecase:
        write_file(f"    return 2* res\n\n")
    else:
        write_file(f"    return res\n\n")


init_file()
generate_flipping_function("part_A_flipping", "./outputFlippingA.txt", False)
generate_flipping_function("part_B_flipping", "./outputFlippingB.txt", True)
generate_flipping_function("part_C_flipping", "./outputFlippingC.txt", False)
